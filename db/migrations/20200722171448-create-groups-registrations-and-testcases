const migration = {
  up: (iface, Sequelize) => iface.sequelize.transaction(transaction => Promise.all([
    iface.createTable('groups', {
      hackathon_id: {
        type: Sequelize.UUID,
        references: { model: 'hackathons', key: 'id' },
      },
      created_by: {
        type: Sequelize.UUID,
        references: { model: 'users', key: 'id' },
      },
      invitees: Sequelize.ARRAY(Sequelize.UUID),
      best_score: INTEGER,
      created_at: {
        type: Sequelize.DATE,
        defaultValue: Sequelize.literal('NOW()'),
      },
      updated_at: {
        type: Sequelize.DATE,
        defaultValue: Sequelize.literal('NOW()'),
      },
    }, { transaction }),

    iface.createTable('registrations', {
      user_id: Sequelize.UUID,
      group_id: {
        type: Sequelize.UUID,
        references: { model: 'groups', key: 'id' },
      },
    }, { transaction }),

    iface.createTable('submissions', {
      language: Sequelize.STRING, // change this to enum
      code_url: Sequelize.STRING,
      group_id: {
        type: Sequelize.UUID,
        references: { model: 'groups', key: 'id' },
      },
    }, { transaction }),

    iface.createTable('test_cases', {
      input: Sequelize.STRING,
      output: Sequelize.STRING,
      weight: Sequelize.INTEGER,
      hackathon_id: {
        type: Sequelize.UUID,
        references: { model: 'hackathons', key: 'id' },
      },
      is_public: Sequelize.BOOLEAN,
    }, { transaction }),

    iface.createTable('results', {
      test_case_id: {
        type: Sequelize.UUID,
        references: { model: 'test_cases', key: 'id' },
      }
      submission_id: {
        type: Sequelize.UUID,
        references: { model: 'submissions', key: 'id' },
      },
      score: Sequelize.INTEGER,
    }, { transaction }),

  ])),
  down: (iface, Sequelize) => iface.sequelize.transaction(transaction => Promise.all([
    iface.dropTable('results', { transaction }),
    iface.dropTable('test_cases', { transaction }),
    iface.dropTable('submissions', { transaction }),
    iface.dropTable('registrations', { transaction }),
    iface.dropTable('groups', { transaction }),
  ])),
};

export default migration;
